NOTES:
1. options probably will need both name and label -- treat what you read as a label, and canonically create a name.
   canonical method = lowercase all letters; turn everything that is not a number of letter into underscore.
2. once this thing is done, you can pop in a dictionary into the parent_children_array within the processing loop in xls2json. each element in the "zone" / "state" / "lga" should basically be a parallel of a "new_json_dict" that is produced while processing select_one questions.

pass 0
------
"zone" : {"name" : "zone",
          "label" : "Choose your zone",
          "options" : ['zone1', 'zone1', 'zone1', 'zone1','zone2', 'zone2', 'zone2', 'zone2']} 
"state" : {"name" : "state",
          "label" : "Choose your state",
          "options" : ['state1', 'state1', 'state2', 'state2', 'state3', 'state3', 'state4', 'state4'],
          "prev_options" : ['zone1', 'zone1', 'zone1', 'zone1','zone2', 'zone2', 'zone2', 'zone2']}
"lga" : {"name" : "lga",
          "label" : "Choose your lga",
          "options" : ['lga1', 'lga2', 'lga3', 'lga4', 'lga5', 'lga6', 'lga7', 'lga8'],
          "prev_options" : ['state1', 'state1', 'state2', 'state2', 'state3', 'state3', 'state4', 'state4']

pass 1 -- make things unique
------
"zone" : {"name" : "zone",
          "label" : "Choose your zone",
          "options" : ['zone1', 'zone2']} 
"state" : {"name" : "state",
          "label" : "Choose your state",
          "options" : ['state1', 'state2', 'state3', 'state4'],
          "prev_options" : ['zone1', 'zone1', 'zone2',  'zone2']} // NOTE: index-based correspondence maintained with options
"lga" : {"name" : "lga",
          "label" : "Choose your lga",
          "options" : ['lga1', 'lga2', 'lga3', 'lga4', 'lga5', 'lga6', 'lga7', 'lga8'],
          "prev_options" : ['state1', 'state1', 'state2', 'state2', 'state3', 'state3', 'state4', 'state4']
        }

pass 2 -- go crazy
------
[
"zone" : {"name" : "zone",
          "label" : "Choose your zone",
          "options" : ['zone1', 'zone2']}
// for each unique zone, there will be one list below
"state" : {"zone1": {"name" : "state" + "_in_" + "zone1",
                     "label" : "Choose your state", // same
                     "options": ['state1', 'state2'] // index-correspondences with zone1
                     "relevance" : zone was zone1
                    },
            "zone2": {"name" : "state" + "_in_" + "zone2",
                     "label" : "Choose your state", // same
                     "options": ['state3', 'state4'] // index-correspondences with zone2
                     "relevance" : zone was zone2
                    }
            }
// for each unique state, there will be one list below
"lga" : {"state1" : {"name" : "lga" + "_in_" + "state1",
                     "label" : "Choose your lga", // same
                     "options": ['lga1', 'lga2'] // index-correspondences with state1
                     "relevance" : zone was state1 
                    },
         "state2" : {"name" : "lga" + "_in_" + "state2",
                     "label" : "Choose your lga", // same
                     "options": ['lga3', 'lga4'] // index-correspondences with state2
                     "relevance" : zone was state2
                    },
         "state3" : {"name" : "lga" + "_in_" + "state3",
                     "label" : "Choose your lga", // same
                     "options": ['lga5', 'lga6'] // index-correspondences with state3
                     "relevance" : zone was state3
                    },
         "state4" : {"name" : "lga" + "_in_" + "state4",
                     "label" : "Choose your lga", // same
                     "options": ['lga7', 'lga8'] // index-correspondences with state4
                     "relevance" : zone was state4
                    }
        }
]
pass 3 -- add the calculates within "state" and "lga" structures
------


                    


